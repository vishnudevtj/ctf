
#define O_RDONLY	0x0000
#define O_WRONLY	0x0001
#define O_RDWR          0x0002
#define O_NOCTTY       0400

#define O_DSYNC		00010000	/* used to be O_SYNC, see below */
#define __O_SYNC	04000000
#define O_SYNC		(__O_SYNC|O_DSYNC)

# define SEEK_SET	0	/* Seek from beginning of file.  */
# define SEEK_CUR	1	/* Seek from current position.  */
# define SEEK_END	2	/* Seek from end of file.  */


#define PROT_READ       0x1             /* Page can be read.  */
#define PROT_WRITE      0x2             /* Page can be written.  */

#define MAP_PRIVATE     0x02            /* Changes are private.  */
#define MAP_SHARED        0x01                /* Share changes.  */
#define MAP_ANONYMOUS   0x20            /* Don't use a file.  */
#define MAP_POPULATE    0x8000
#define MAP_FIXED       0x10
#define MAP_GROWSDOWN   0x0100


#define	EXIT_FAILURE	1	/* Failing exit status.  */
#define	EXIT_SUCCESS	0	/* Successful exit status.  */

typedef  unsigned long int uint64_t;
typedef  unsigned int uint32_t;

// syscall
int read(int fd, char* buf, int len);
int write(int fd, char* buf, int len);
int open(char* filename, int flags);
int close(int fd);
uint64_t lseek(int fd, uint64_t offset, int whence);
void exit(int status);
int ioctl(unsigned int fd, unsigned int cmd, char* arg);
int execve(char *filename, char *const argv[], char *const envp[]);
int getuid();
int geteuid();
int setresuid(unsigned int ruid, unsigned int euid, unsigned int suid);

// helper
char getchar();
void putchar(int c);
void puts(char* string);
void *mmap(void *addr, unsigned long length, int prot, int flags,
           int fd, unsigned long offset);
int strlen(char* string);
void strncpy(char * dest,char * src, int size);
void memcpy(char * dest,char * src, int size);
void * memset(char *s , int c ,unsigned int  n);

unsigned long hex(unsigned long value);
void hexdump(const unsigned char *x, unsigned long n);
void log_ptr
(char * str, void * addr);

// msgsnd() heap spray
#define IPC_CREAT       00001000
#define MSG_NOERROR	010000
#define IPC_NOWAIT	04000
int msgsnd(int msqid, void *msgp, unsigned long msgsz, int msgflg);
int msgget(int key, int msgflg);
int msgrcv(int msqid, void *msgp, unsigned long msgsz, long msgtyp,
           int msgflg);


